/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables;


import com.epam.charity.jooq.dto.Dev;
import com.epam.charity.jooq.dto.Keys;
import com.epam.charity.jooq.dto.tables.records.CompetitionApplicationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompetitionApplication extends TableImpl<CompetitionApplicationRecord> {

    private static final long serialVersionUID = -844131416;

    /**
     * The reference instance of <code>dev.competition_application</code>
     */
    public static final CompetitionApplication COMPETITION_APPLICATION = new CompetitionApplication();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompetitionApplicationRecord> getRecordType() {
        return CompetitionApplicationRecord.class;
    }

    /**
     * The column <code>dev.competition_application.competition</code>.
     */
    public final TableField<CompetitionApplicationRecord, Integer> COMPETITION = createField("competition", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev.competition_application.application</code>.
     */
    public final TableField<CompetitionApplicationRecord, Integer> APPLICATION = createField("application", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>dev.competition_application</code> table reference
     */
    public CompetitionApplication() {
        this("competition_application", null);
    }

    /**
     * Create an aliased <code>dev.competition_application</code> table reference
     */
    public CompetitionApplication(String alias) {
        this(alias, COMPETITION_APPLICATION);
    }

    private CompetitionApplication(String alias, Table<CompetitionApplicationRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompetitionApplication(String alias, Table<CompetitionApplicationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dev.DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompetitionApplicationRecord> getPrimaryKey() {
        return Keys.PRIMARY19;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompetitionApplicationRecord>> getKeys() {
        return Arrays.<UniqueKey<CompetitionApplicationRecord>>asList(Keys.PRIMARY19);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CompetitionApplicationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CompetitionApplicationRecord, ?>>asList(Keys.COMPETITION_APPLICATION__COMP_ID, Keys.COMPETITION_APPLICATION__APPL_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionApplication as(String alias) {
        return new CompetitionApplication(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CompetitionApplication rename(String name) {
        return new CompetitionApplication(name, null);
    }
}
