/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables.records;


import com.epam.charity.jooq.dto.tables.CompetitionJudge;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompetitionJudgeRecord extends UpdatableRecordImpl<CompetitionJudgeRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1382507014;

    /**
     * Setter for <code>dev.competition_judge.competition_id</code>.
     */
    public void setCompetitionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>dev.competition_judge.competition_id</code>.
     */
    public Integer getCompetitionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dev.competition_judge.judge_id</code>.
     */
    public void setJudgeId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>dev.competition_judge.judge_id</code>.
     */
    public Integer getJudgeId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CompetitionJudge.COMPETITION_JUDGE.COMPETITION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CompetitionJudge.COMPETITION_JUDGE.JUDGE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCompetitionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getJudgeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionJudgeRecord value1(Integer value) {
        setCompetitionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionJudgeRecord value2(Integer value) {
        setJudgeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionJudgeRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompetitionJudgeRecord
     */
    public CompetitionJudgeRecord() {
        super(CompetitionJudge.COMPETITION_JUDGE);
    }

    /**
     * Create a detached, initialised CompetitionJudgeRecord
     */
    public CompetitionJudgeRecord(Integer competitionId, Integer judgeId) {
        super(CompetitionJudge.COMPETITION_JUDGE);

        set(0, competitionId);
        set(1, judgeId);
    }
}
