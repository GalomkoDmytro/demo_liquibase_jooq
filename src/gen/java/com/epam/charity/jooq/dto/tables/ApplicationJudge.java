/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables;


import com.epam.charity.jooq.dto.Dev;
import com.epam.charity.jooq.dto.Keys;
import com.epam.charity.jooq.dto.tables.records.ApplicationJudgeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApplicationJudge extends TableImpl<ApplicationJudgeRecord> {

    private static final long serialVersionUID = -51684536;

    /**
     * The reference instance of <code>dev.application_judge</code>
     */
    public static final ApplicationJudge APPLICATION_JUDGE = new ApplicationJudge();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ApplicationJudgeRecord> getRecordType() {
        return ApplicationJudgeRecord.class;
    }

    /**
     * The column <code>dev.application_judge.application_id</code>.
     */
    public final TableField<ApplicationJudgeRecord, Integer> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev.application_judge.judge_id</code>.
     */
    public final TableField<ApplicationJudgeRecord, Integer> JUDGE_ID = createField("judge_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dev.application_judge.grade</code>.
     */
    public final TableField<ApplicationJudgeRecord, Double> GRADE = createField("grade", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * Create a <code>dev.application_judge</code> table reference
     */
    public ApplicationJudge() {
        this("application_judge", null);
    }

    /**
     * Create an aliased <code>dev.application_judge</code> table reference
     */
    public ApplicationJudge(String alias) {
        this(alias, APPLICATION_JUDGE);
    }

    private ApplicationJudge(String alias, Table<ApplicationJudgeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApplicationJudge(String alias, Table<ApplicationJudgeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dev.DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ApplicationJudgeRecord> getPrimaryKey() {
        return Keys.PRIMARY17;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ApplicationJudgeRecord>> getKeys() {
        return Arrays.<UniqueKey<ApplicationJudgeRecord>>asList(Keys.PRIMARY17);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ApplicationJudgeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ApplicationJudgeRecord, ?>>asList(Keys.APPLICATION_JUDGE__APPLIATION_APPLICATION, Keys.APPLICATION_JUDGE__APPLICATION_JUDGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ApplicationJudge as(String alias) {
        return new ApplicationJudge(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ApplicationJudge rename(String name) {
        return new ApplicationJudge(name, null);
    }
}
