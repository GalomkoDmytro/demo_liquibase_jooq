/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables.records;


import com.epam.charity.jooq.dto.tables.CompetitionApplication;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompetitionApplicationRecord extends UpdatableRecordImpl<CompetitionApplicationRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = -1938261451;

    /**
     * Setter for <code>dev.competition_application.competition</code>.
     */
    public void setCompetition(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>dev.competition_application.competition</code>.
     */
    public Integer getCompetition() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dev.competition_application.application</code>.
     */
    public void setApplication(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>dev.competition_application.application</code>.
     */
    public Integer getApplication() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CompetitionApplication.COMPETITION_APPLICATION.COMPETITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CompetitionApplication.COMPETITION_APPLICATION.APPLICATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getCompetition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getApplication();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionApplicationRecord value1(Integer value) {
        setCompetition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionApplicationRecord value2(Integer value) {
        setApplication(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompetitionApplicationRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompetitionApplicationRecord
     */
    public CompetitionApplicationRecord() {
        super(CompetitionApplication.COMPETITION_APPLICATION);
    }

    /**
     * Create a detached, initialised CompetitionApplicationRecord
     */
    public CompetitionApplicationRecord(Integer competition, Integer application) {
        super(CompetitionApplication.COMPETITION_APPLICATION);

        set(0, competition);
        set(1, application);
    }
}
