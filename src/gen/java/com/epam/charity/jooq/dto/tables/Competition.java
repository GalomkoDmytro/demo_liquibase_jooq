/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables;


import com.epam.charity.jooq.dto.Dev;
import com.epam.charity.jooq.dto.Keys;
import com.epam.charity.jooq.dto.tables.records.CompetitionRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Competition extends TableImpl<CompetitionRecord> {

    private static final long serialVersionUID = -1435447719;

    /**
     * The reference instance of <code>dev.competition</code>
     */
    public static final Competition COMPETITION = new Competition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompetitionRecord> getRecordType() {
        return CompetitionRecord.class;
    }

    /**
     * The column <code>dev.competition.id</code>.
     */
    public final TableField<CompetitionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('dev.competition_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev.competition.title</code>.
     */
    public final TableField<CompetitionRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>dev.competition.description</code>.
     */
    public final TableField<CompetitionRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dev.competition.is_active</code>.
     */
    public final TableField<CompetitionRecord, Short> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>dev.competition.start_date</code>.
     */
    public final TableField<CompetitionRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>dev.competition.end_date</code>.
     */
    public final TableField<CompetitionRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>dev.competition</code> table reference
     */
    public Competition() {
        this("competition", null);
    }

    /**
     * Create an aliased <code>dev.competition</code> table reference
     */
    public Competition(String alias) {
        this(alias, COMPETITION);
    }

    private Competition(String alias, Table<CompetitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Competition(String alias, Table<CompetitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dev.DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompetitionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPETITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompetitionRecord> getPrimaryKey() {
        return Keys.PRIMARY18;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompetitionRecord>> getKeys() {
        return Arrays.<UniqueKey<CompetitionRecord>>asList(Keys.PRIMARY18);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Competition as(String alias) {
        return new Competition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Competition rename(String name) {
        return new Competition(name, null);
    }
}
