/*
 * This file is generated by jOOQ.
*/
package com.epam.charity.jooq.dto.tables;


import com.epam.charity.jooq.dto.Dev;
import com.epam.charity.jooq.dto.Keys;
import com.epam.charity.jooq.dto.tables.records.VideoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Video extends TableImpl<VideoRecord> {

    private static final long serialVersionUID = 23368344;

    /**
     * The reference instance of <code>dev.video</code>
     */
    public static final Video VIDEO = new Video();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VideoRecord> getRecordType() {
        return VideoRecord.class;
    }

    /**
     * The column <code>dev.video.id</code>.
     */
    public final TableField<VideoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('dev.video_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>dev.video.url</code>.
     */
    public final TableField<VideoRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>dev.video.name</code>.
     */
    public final TableField<VideoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>dev.video.author</code>.
     */
    public final TableField<VideoRecord, String> AUTHOR = createField("author", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>dev.video.duration</code>.
     */
    public final TableField<VideoRecord, Double> DURATION = createField("duration", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>dev.video.application_id</code>.
     */
    public final TableField<VideoRecord, Integer> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>dev.video</code> table reference
     */
    public Video() {
        this("video", null);
    }

    /**
     * Create an aliased <code>dev.video</code> table reference
     */
    public Video(String alias) {
        this(alias, VIDEO);
    }

    private Video(String alias, Table<VideoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Video(String alias, Table<VideoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dev.DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VideoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VIDEO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VideoRecord> getPrimaryKey() {
        return Keys.PRIMARY23;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VideoRecord>> getKeys() {
        return Arrays.<UniqueKey<VideoRecord>>asList(Keys.PRIMARY23);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VideoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VideoRecord, ?>>asList(Keys.VIDEO__VIDEO_APPLICATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Video as(String alias) {
        return new Video(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Video rename(String name) {
        return new Video(name, null);
    }
}
